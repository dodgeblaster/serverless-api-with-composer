Resources:
  #------------------------------------------------
  # Api Gateway
  #------------------------------------------------
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: CFLambdaTest

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - Method
    Properties:
      RestApiId: !Ref RestApi
  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref Deployment
      RestApiId: !Ref RestApi
      StageName: prod

  #------------------------------------------------
  # Api Route
  #------------------------------------------------
  Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: products
      RestApiId: !Ref RestApi

  Method:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref Resource
      RestApiId: !Ref RestApi
      #------------------------------------------------
      # Api Route -> Lambda Relationship: Integration
      #------------------------------------------------
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt ApiGatewayRole.Arn
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction}/invocations"
          - MyFunction: !GetAtt MyFunction.Arn

  #------------------------------------------------
  # Api Route -> Lambda Relationship: Permission
  #------------------------------------------------
  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - apigateway.amazonaws.com
      Policies:
        - PolicyName: CFLambdaTest-InvokeFunctionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt MyFunction.Arn
  #------------------------------------------------
  # Function Infra
  #------------------------------------------------
  MyFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs16.x
      Role: !GetAtt LambdaRole.Arn
      FunctionName: CFLambdaTest
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              return {
                statusCode: 200,
                body: JSON.stringify({
                  id: 100,
                  message: "hello from CF Stack!"
                })
              }
          }
      TracingConfig:
        Mode: Active

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/CFLambdaTest
      RetentionInDays: 90

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CFLambdaTest-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: CFLambdaTest-lambdapolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CFLambdaTest:*
Outputs:
  Endpoint:
    Value: !Sub
      - "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/products"
      - ApiId: !Ref RestApi
